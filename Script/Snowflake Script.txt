//TABLES Creation
CREATE OR REPLACE DATABASE IOTV2;

CREATE OR REPLACE SCHEMA IOT_SCHEMA;


CREATE OR REPLACE TABLE LOAD_IOTV2_EUEXPERIENCE00320055(
    ATOMICCONSENTS VARCHAR(),
    DATA VARCHAR(),
    ORIGINREGION VARCHAR(),
    REQUESTID VARCHAR(),
    SERIALNUMBER VARCHAR(),
    SOURCE_FILE_NAME VARCHAR(),
    EVENT_LOCAL_TIMESTAMP VARCHAR()
);

CREATE OR REPLACE TABLE LOAD_IOTV2_JPEXPERIENCE00320055(
    ATOMICCONSENTS VARCHAR(),
    DATA VARCHAR(),
    ORIGINREGION VARCHAR(),
    REQUESTID VARCHAR(),
    SERIALNUMBER VARCHAR(),
    SOURCE_FILE_NAME VARCHAR(),
    EVENT_LOCAL_TIMESTAMP VARCHAR()
);

CREATE OR REPLACE TABLE LOAD_IOTV2_NZEXPERIENCE002F0052(
    ATOMICCONSENTS VARCHAR(),
    DATA VARCHAR(),
    ORIGINREGION VARCHAR(),
    REQUESTID VARCHAR(),
    SERIALNUMBER VARCHAR(),
    SOURCE_FILE_NAME VARCHAR(),
    EVENT_LOCAL_TIMESTAMP VARCHAR()
);

//STORAGE INTEGRATION SNOWFLAKE TO AWS
CREATE OR REPLACE FILE FORMAT IOTV2_TXT
    TYPE='CSV'
    COMPRESSION = 'NONE'
    FIELD_DELIMITER = '\t'
    FIELD_OPTIONALLY_ENCLOSED_BY = '\042'
    SKIP_HEADER = 1;

CREATE OR REPLACE STORAGE INTEGRATION IOTV2_SI
TYPE = EXTERNAL_STAGE
STORAGE_PROVIDER = S3
ENABLED = TRUE
STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::211125783493:role/myretailrole'
STORAGE_ALLOWED_LOCATIONS = ('S3://sr-iotv2/');

DESC INTEGRATION IOTV2_SI;

CREATE OR REPLACE STAGE IOTV2_STAGE
URL = 'S3://sr-iotv2'
FILE_FORMAT = IOTV2_TXT
STORAGE_INTEGRATION = IOTV2_SI;

LIST @IOTV2_STAGE;

SHOW STAGES;

//SNOW PIPES CREATION

CREATE OR REPLACE PIPE IOTV2_SNOWPIPE_EUEXPERIENCE00320055 AUTO_INGEST = TRUE AS
COPY INTO IOTV2.IOT_SCHEMA.LOAD_IOTV2_EUEXPERIENCE00320055
FROM '@IOTV2_STAGE/IOTV2_EUEXPERIENCE00320055/'
FILE_FORMAT = IOTV2_TXT;

CREATE OR REPLACE PIPE IOTV2_SNOWPIPE_JPEXPERIENCE00320055 AUTO_INGEST = TRUE AS
COPY INTO IOTV2.IOT_SCHEMA.LOAD_IOTV2_JPEXPERIENCE00320055
FROM '@IOTV2_STAGE/IOTV2_JPEXPERIENCE00320055'
FILE_FORMAT = IOTV2_TXT;

CREATE OR REPLACE PIPE IOTV2_SNOWPIPE_NZEXPERIENCE002F0052 AUTO_INGEST = TRUE AS
COPY INTO IOTV2.IOT_SCHEMA.LOAD_IOTV2_NZEXPERIENCE002F0052
FROM '@IOTV2_STAGE/IOTV2_NZEXPERIENCE002F0052'
FILE_FORMAT = IOTV2_TXT;

SHOW PIPES;

//PIPES REFRESH

ALTER PIPE IOTV2_SNOWPIPE_EUEXPERIENCE00320055 REFRESH;
SELECT COUNT(*) FROM IOTV2.IOT_SCHEMA.LOAD_IOTV2_EUEXPERIENCE00320055;

ALTER PIPE IOTV2_SNOWPIPE_JPEXPERIENCE00320055 REFRESH;
SELECT COUNT(*) FROM IOTV2.IOT_SCHEMA.LOAD_IOTV2_JPEXPERIENCE00320055;

ALTER PIPE IOTV2_SNOWPIPE_NZEXPERIENCE002F0052 REFRESH;
SELECT COUNT(*) FROM IOTV2.IOT_SCHEMA.LOAD_IOTV2_NZEXPERIENCE002F0052;

CREATE OR REPLACE TABLE IOTV2.IOT_SCHEMA.LOAD_IOTV2_NZEXPERIENCE002F0052_COPY AS SELECT * FROM IOTV2.IOT_SCHEMA.LOAD_IOTV2_NZEXPERIENCE002F0052;

//Create VIEW by adding two columns of START_MCU_TEMPERATURE and END_MCU_TEMPERATURE

CREATE OR REPLACE VIEW DP_S_MAS_IOTV2_JSON_EXP (
	ATOMICCONSENTS,
    RECORDINDEX,
	RECORDFORMATVERSION,
	RECORDSIZE,
	STARTTIME,
	EXPCREDIT,
	STARTBATTERYGAUGELEVEL,
	ENDBATTERYGAUGELEVEL,
	CONTROLSTARTBATTERYVOLTAGE,
	CONTROLSTARTTEMPERATURE2,
	CONTROLINTERNALRESISTORINDICATOR,
	CONTROLENDBATTERYVOLTAGE,
	CONTROLENDTEMPERATURE2,
	CONTROLSTOPREASON,
	STARTREASON,
	SKU,
	STARTTEMP1,
	START_MCU_TEMPERATURE,
	END_MCU_TEMPERATURE,
	STARTTEMP2,
	STARTDCDCVOLTAGE,
	ENDTEMP1,
	ENDTEMP2,
	ENDDCDCVOLTAGE,
	DCDCVOLTAGEVARIATION,
	INTERNALRESISTORINDICATOR,
	STARTCONDUCTANCE,
	FIRSTVALLEYCONDUCTANCE,
	FIRSTDELTASCURVECONDUCTANCE,
	LASTDELTASCURVECONDUCTANCE,
	PREHEATSLOPETIME,
	OUTOFRANGEREGULATION,
	DRIFTCOMPENSATIONERROR,
	HEATINGDURATION,
	PAUSEDURATION,
	PAUSETIMESTAMP,
	PAUSEENERGY,
	HEATINGENERGY,
	ENGINESTOPREASON,
	HEATINGPROFILE,
	STARTBATTERYVOLTAGE,
	ENDBATTERYVOLTAGE,
	BATTERYVOLTAGEVARIATION,
	LASTVALLEYCONDUCTANCE,
	FIRSTHILLCONDUCTANCE,
	CALIBRATIONDURATION,
	HOTALARMTREATED,
	MAXIMUMDELTASVARIATION,
	VALIDSCURVEDETECTED,
	COOLINGSEQUENCEFAILURE,
	CALIBRATIONPULSEFAILURE,
	APPLICATIONVERSION,
	PUFFCOUNT,
	PUFFS,
	INDEX,
	PUFFCOUNTBEFOREPAUSE,
	PUFFCOUNTAFTERPAUSE,
	PUFFVOLUMEAFTER14PUFFS,
	TOTALPUFFVOLUME,
	PAUSEPROFILE,
	ENERGYTOFIRSTVALLEY,
	STICKEXTRACTIONDURATION,
	ENGINEFLAGS,
	CONTROLFLAGS,
	ORIGINREGION,
	REQUESTID,
	SERIALNUMBER,
	SOURCE_FILE_NAME,
	EVENT_LOCAL_TIMESTAMP,
) as
SELECT 
EXP3.ATOMICCONSENTS,
parse_json(DATA):recordIndex,
parse_json(DATA):recordFormatVersion,
parse_json(DATA):recordSize,
parse_json(DATA):startTime,
parse_json(DATA):expCredit,
parse_json(DATA):startBatteryGaugeLevel,
parse_json(DATA):endBatteryGaugeLevel,
parse_json(DATA):controlStartBatteryVoltage,
parse_json(DATA):controlStartTemperature2,
parse_json(DATA):controlInternalResistorIndicator,
parse_json(DATA):controlEndBatteryVoltage,
parse_json(DATA):controlEndTemperature2,
parse_json(DATA):controlStopReason,
parse_json(DATA):startReason,
parse_json(DATA):SKU,
parse_json(DATA):startTemp1,
parse_json(DATA):startMCUtemperature,
parse_json(DATA):endMCUtemperature,
parse_json(DATA):startTemp2,
parse_json(DATA):startDCDCVoltage,
parse_json(DATA):endTemp1,
parse_json(DATA):endTemp2,
parse_json(DATA):endDCDCVoltage,
parse_json(DATA):DCDCVoltageVariation,
parse_json(DATA):internalResistorIndicator,
parse_json(DATA):startConductance,
parse_json(DATA):firstValleyConductance,
parse_json(DATA):firstDeltaScurveConductance,
parse_json(DATA):lastDeltaScurveConductance,
parse_json(DATA):preheatSlopeTime,
parse_json(DATA):outOfRangeRegulation,
parse_json(DATA):driftCompensationError,
parse_json(DATA):heatingDuration,
parse_json(DATA):pauseDuration,
parse_json(DATA):pauseTimeStamp,
parse_json(DATA):pauseEnergy,
parse_json(DATA):heatingEnergy,
parse_json(DATA):engineStopReason,
parse_json(DATA):heatingProfile,
parse_json(DATA):startBatteryVoltage,
parse_json(DATA):endBatteryVoltage,
parse_json(DATA):batteryVoltageVariation,
parse_json(DATA):lastValleyConductance,
parse_json(DATA):firstHillConductance,
parse_json(DATA):calibrationDuration,
parse_json(DATA):hotAlarmTreated,
parse_json(DATA):maximumDeltaSvariation,
parse_json(DATA):validScurveDetected,
parse_json(DATA):coolingSequenceFailure,
parse_json(DATA):calibrationPulseFailure,
parse_json(DATA):applicationVersion,
parse_json(DATA):puffCount,
parse_json(DATA):puffs,
parse_json(DATA):index,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
EXP3.ORIGINREGION,
REPLACE(EXP3.REQUESTID,'__USAGE_DATA',''),
EXP3.SERIALNUMBER,
EXP3.SOURCE_FILE_NAME,
EXP3.EVENT_LOCAL_TIMESTAMP
 FROM (SELECT ATOMICCONSENTS,DATA,ORIGINREGION,REQUESTID,SERIALNUMBER,SOURCE_FILE_NAME,EVENT_LOCAL_TIMESTAMP
FROM IOTV2.IOT_SCHEMA.LOAD_IOTV2_EUEXPERIENCE00320055
UNION
SELECT ATOMICCONSENTS,DATA,ORIGINREGION,REQUESTID,SERIALNUMBER,SOURCE_FILE_NAME,EVENT_LOCAL_TIMESTAMP
FROM IOTV2.IOT_SCHEMA.LOAD_IOTV2_JPEXPERIENCE00320055
UNION
SELECT ATOMICCONSENTS,DATA,ORIGINREGION,REQUESTID,SERIALNUMBER,SOURCE_FILE_NAME,EVENT_LOCAL_TIMESTAMP
FROM IOTV2.IOT_SCHEMA.LOAD_IOTV2_NZEXPERIENCE002F0052
) EXP3;

 